/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignInImport } from './routes/sign-in'
import { Route as RegisterInImport } from './routes/register-in'
import { Route as AuthImport } from './routes/auth'
import { Route as AccountImport } from './routes/account'
import { Route as authImport } from './routes/__auth'
import { Route as MySearchesIndexImport } from './routes/my-searches.index'
import { Route as MessagesIndexImport } from './routes/messages.index'
import { Route as FavoritesIndexImport } from './routes/favorites.index'
import { Route as AdsIndexImport } from './routes/ads.index'
import { Route as AdsAdIdImport } from './routes/ads.$adId'
import { Route as AdNewImport } from './routes/ad.new'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const SignInRoute = SignInImport.update({
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const RegisterInRoute = RegisterInImport.update({
  path: '/register-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const AccountRoute = AccountImport.update({
  path: '/account',
  getParentRoute: () => rootRoute,
} as any)

const authRoute = authImport.update({
  id: '/__auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const MySearchesIndexRoute = MySearchesIndexImport.update({
  path: '/my-searches/',
  getParentRoute: () => rootRoute,
} as any)

const MessagesIndexRoute = MessagesIndexImport.update({
  path: '/messages/',
  getParentRoute: () => rootRoute,
} as any)

const FavoritesIndexRoute = FavoritesIndexImport.update({
  path: '/favorites/',
  getParentRoute: () => rootRoute,
} as any)

const AdsIndexRoute = AdsIndexImport.update({
  path: '/ads/',
  getParentRoute: () => rootRoute,
} as any)

const AdsAdIdRoute = AdsAdIdImport.update({
  path: '/ads/$adId',
  getParentRoute: () => rootRoute,
} as any)

const AdNewRoute = AdNewImport.update({
  path: '/ad/new',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/__auth': {
      id: '/__auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof authImport
      parentRoute: typeof rootRoute
    }
    '/account': {
      id: '/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AccountImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/register-in': {
      id: '/register-in'
      path: '/register-in'
      fullPath: '/register-in'
      preLoaderRoute: typeof RegisterInImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/ad/new': {
      id: '/ad/new'
      path: '/ad/new'
      fullPath: '/ad/new'
      preLoaderRoute: typeof AdNewImport
      parentRoute: typeof rootRoute
    }
    '/ads/$adId': {
      id: '/ads/$adId'
      path: '/ads/$adId'
      fullPath: '/ads/$adId'
      preLoaderRoute: typeof AdsAdIdImport
      parentRoute: typeof rootRoute
    }
    '/ads/': {
      id: '/ads/'
      path: '/ads'
      fullPath: '/ads'
      preLoaderRoute: typeof AdsIndexImport
      parentRoute: typeof rootRoute
    }
    '/favorites/': {
      id: '/favorites/'
      path: '/favorites'
      fullPath: '/favorites'
      preLoaderRoute: typeof FavoritesIndexImport
      parentRoute: typeof rootRoute
    }
    '/messages/': {
      id: '/messages/'
      path: '/messages'
      fullPath: '/messages'
      preLoaderRoute: typeof MessagesIndexImport
      parentRoute: typeof rootRoute
    }
    '/my-searches/': {
      id: '/my-searches/'
      path: '/my-searches'
      fullPath: '/my-searches'
      preLoaderRoute: typeof MySearchesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof authRoute
  '/account': typeof AccountRoute
  '/auth': typeof AuthRoute
  '/register-in': typeof RegisterInRoute
  '/sign-in': typeof SignInRoute
  '/about': typeof AboutLazyRoute
  '/ad/new': typeof AdNewRoute
  '/ads/$adId': typeof AdsAdIdRoute
  '/ads': typeof AdsIndexRoute
  '/favorites': typeof FavoritesIndexRoute
  '/messages': typeof MessagesIndexRoute
  '/my-searches': typeof MySearchesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof authRoute
  '/account': typeof AccountRoute
  '/auth': typeof AuthRoute
  '/register-in': typeof RegisterInRoute
  '/sign-in': typeof SignInRoute
  '/about': typeof AboutLazyRoute
  '/ad/new': typeof AdNewRoute
  '/ads/$adId': typeof AdsAdIdRoute
  '/ads': typeof AdsIndexRoute
  '/favorites': typeof FavoritesIndexRoute
  '/messages': typeof MessagesIndexRoute
  '/my-searches': typeof MySearchesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/__auth': typeof authRoute
  '/account': typeof AccountRoute
  '/auth': typeof AuthRoute
  '/register-in': typeof RegisterInRoute
  '/sign-in': typeof SignInRoute
  '/about': typeof AboutLazyRoute
  '/ad/new': typeof AdNewRoute
  '/ads/$adId': typeof AdsAdIdRoute
  '/ads/': typeof AdsIndexRoute
  '/favorites/': typeof FavoritesIndexRoute
  '/messages/': typeof MessagesIndexRoute
  '/my-searches/': typeof MySearchesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/account'
    | '/auth'
    | '/register-in'
    | '/sign-in'
    | '/about'
    | '/ad/new'
    | '/ads/$adId'
    | '/ads'
    | '/favorites'
    | '/messages'
    | '/my-searches'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/account'
    | '/auth'
    | '/register-in'
    | '/sign-in'
    | '/about'
    | '/ad/new'
    | '/ads/$adId'
    | '/ads'
    | '/favorites'
    | '/messages'
    | '/my-searches'
  id:
    | '__root__'
    | '/'
    | '/__auth'
    | '/account'
    | '/auth'
    | '/register-in'
    | '/sign-in'
    | '/about'
    | '/ad/new'
    | '/ads/$adId'
    | '/ads/'
    | '/favorites/'
    | '/messages/'
    | '/my-searches/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  authRoute: typeof authRoute
  AccountRoute: typeof AccountRoute
  AuthRoute: typeof AuthRoute
  RegisterInRoute: typeof RegisterInRoute
  SignInRoute: typeof SignInRoute
  AboutLazyRoute: typeof AboutLazyRoute
  AdNewRoute: typeof AdNewRoute
  AdsAdIdRoute: typeof AdsAdIdRoute
  AdsIndexRoute: typeof AdsIndexRoute
  FavoritesIndexRoute: typeof FavoritesIndexRoute
  MessagesIndexRoute: typeof MessagesIndexRoute
  MySearchesIndexRoute: typeof MySearchesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  authRoute: authRoute,
  AccountRoute: AccountRoute,
  AuthRoute: AuthRoute,
  RegisterInRoute: RegisterInRoute,
  SignInRoute: SignInRoute,
  AboutLazyRoute: AboutLazyRoute,
  AdNewRoute: AdNewRoute,
  AdsAdIdRoute: AdsAdIdRoute,
  AdsIndexRoute: AdsIndexRoute,
  FavoritesIndexRoute: FavoritesIndexRoute,
  MessagesIndexRoute: MessagesIndexRoute,
  MySearchesIndexRoute: MySearchesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__auth",
        "/account",
        "/auth",
        "/register-in",
        "/sign-in",
        "/about",
        "/ad/new",
        "/ads/$adId",
        "/ads/",
        "/favorites/",
        "/messages/",
        "/my-searches/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/__auth": {
      "filePath": "__auth.tsx"
    },
    "/account": {
      "filePath": "account.tsx"
    },
    "/auth": {
      "filePath": "auth.tsx"
    },
    "/register-in": {
      "filePath": "register-in.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/ad/new": {
      "filePath": "ad.new.tsx"
    },
    "/ads/$adId": {
      "filePath": "ads.$adId.tsx"
    },
    "/ads/": {
      "filePath": "ads.index.tsx"
    },
    "/favorites/": {
      "filePath": "favorites.index.tsx"
    },
    "/messages/": {
      "filePath": "messages.index.tsx"
    },
    "/my-searches/": {
      "filePath": "my-searches.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
